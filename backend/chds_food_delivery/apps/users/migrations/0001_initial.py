# Generated by Django 5.1.3 on 2024-11-16 17:16

import apps.users.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('full_name', models.CharField(max_length=30, verbose_name='User Full Name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='User Email')),
                ('mobile_number', models.CharField(max_length=13, verbose_name='User Mobile Number')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='User Creation Date&Time')),
                ('is_active', models.BooleanField(default=True, verbose_name='User Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='User Active')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='User Active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['id'],
            },
            managers=[
                ('objects', apps.users.models.UserMangaer()),
            ],
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Street Address')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Postal Code')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Primary Address')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Address',
                'verbose_name_plural': 'User Addresses',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_image', models.ImageField(blank=True, null=True, upload_to='user_images', verbose_name='User Image')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='User Date of birth')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.FloatField(default=0.0, verbose_name='Wallet Balance')),
                ('expiry', models.DateTimeField(blank=True, null=True, verbose_name='Wallet Expire')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wallet',
                'verbose_name_plural': 'Wallets',
            },
        ),
        migrations.CreateModel(
            name='UserCardDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=16, unique=True, verbose_name='Card Number')),
                ('card_fullname', models.CharField(max_length=100, verbose_name='Card Holder Name')),
                ('card_cvv', models.CharField(max_length=4, verbose_name='Card cvv number')),
                ('card_expiry', models.DateField(max_length=8, verbose_name='Card Expiry Date')),
                ('preferred_payment', models.CharField(choices=[('cards', 'Cards'), ('alipay', 'Alipay'), ('wechat', 'WeChat'), ('paypal', 'PayPal'), ('wallet', 'Wallet')], default='cards', max_length=10, verbose_name='Payment Method')),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_cards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment Card',
                'verbose_name_plural': 'Payment Cards',
                'ordering': ['-card_expiry'],
                'unique_together': {('card_number', 'user')},
            },
        ),
    ]
